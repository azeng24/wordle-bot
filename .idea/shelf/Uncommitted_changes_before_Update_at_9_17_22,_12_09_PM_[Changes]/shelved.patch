Index: src/wordleSolver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.File;\nimport java.util.ArrayList;\nimport java.util.Scanner;\nimport java.io.FileNotFoundException;\n\npublic class wordleSolver {\n  static double[] freqArr = new double[26];\n\n  public static void main(String[] args) throws FileNotFoundException {\n    \n    //declare array for frequency\n\n    //declare ArrayList for words\n    ArrayList<String> words = new ArrayList<>();\n    \n    //read in WordleList text file\n\n    File myObj = new File(\"WordList.txt\");\n    Scanner readerWords = new Scanner(myObj);\n    while(readerWords.hasNextLine()) {\n      String w = readerWords.nextLine();\n      words.add(w);  \n    }\n    readerWords.close();\n      \n    //read in frequency text file\n    File myObj2 = new File(\"FreqByLetter.txt\");\n    Scanner readFreq = new Scanner(myObj2);\n    int i = 0;\n    while (readFreq.hasNextLine()) {\n      freqArr[i] = Double.parseDouble(readFreq.nextLine());\n      i++;\n    }\n    \n  }\n\n  static String avoidRepeats(ArrayList<String> words) {\n    boolean repeat = true;\n    int index = 0;\n    while (repeat){\n      char[] word = words.get(index).toCharArray();\n      int counter = 0;\n      for (int i = 0; i < 5; i++) {\n        for (int j = 1+1; j < 5; j++) {\n          if (word[i] == word[j]) {\n            index++;\n            counter++;\n          }\n        }\n      }\n      if (counter == 0) {\n        repeat = false;\n      }\n    }\n    return words.get(index);\n  }\n  double probability (String word)\n  {\n    double sum=0;\n    int pos=0;\n\n    for (int i=0; i<5 ; i++)\n    {\n      pos=word.toLowerCase().charAt(i) - 'a';\n\n      sum+=freqArr[pos];\n    }\n\n    return sum;\n  }\n\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/wordleSolver.java b/src/wordleSolver.java
--- a/src/wordleSolver.java	(revision c84abb7913c8df22a385a2651a6aae7bfd544f78)
+++ b/src/wordleSolver.java	(date 1663430971550)
@@ -69,5 +69,14 @@
     return sum;
   }
 
+  static ArrayList<String> wordSort(ArrayList<String> words) {
+    for(int i = 0; i < words.size(); i++) {
+      WordleSolver.probablity.words.get(i);
+    }
+    return words;
+  }
+
+
+
 }
 
